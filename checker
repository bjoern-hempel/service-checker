#!/bin/bash

# include the libraries
source 'lib/all'

# initial values
ip=''
portsPositive=()
portsNegative=()

# declare parameter list array
PARAMETERS=()

# read arguments
while [[ $# > 0 ]]; do
  case "$1" in
    #
    # port positive
    #
    -pp|-p+|--portPositive)
      portsPositive+=("$2")
      shift
    ;;
    -pp=*|-p+=*|--portNegative=*)
      portsPositive+=("${1#*=}")
    ;;

    #
    # port negative
    #
    -pn|-p-|--portNegative)
      portsNegative+=("$2")
      shift
    ;;
    -pn=*|-p-=*|--portNegative=*)
      portsNegative+=("${1#*=}")
    ;;

    #
    # collect these unknown parameters
    #
    *)
      PARAMETERS+=("$1")
    ;;
  esac
  shift
done

# check ip parameter
if [ ${#PARAMETERS[@]} -lt 1 ]; then
    log 'error' "No server host name or ip address is given"
    exit
fi

# save the ip address
ip="${PARAMETERS[0]}"

allPassed=true

# check if server is running
if isPingableCheck "$ip"; then
    pingable=true
else
    allPassed=false
fi

# check positive ports
for port in "${portsPositive[@]}"; do
    if ! isPortOpenCheck "$ip" "$port"; then
        allPassed=false
    fi
done

# check negative ports
for port in "${portsNegative[@]}"; do
    if ! isPortNotOpenCheck "$ip" "$port"; then
        allPassed=false
    fi
done

url="https://expo.apo-ident.hiperscan.rsm-service.de"
expectedStatusCode="401"
if ! isHttpStatusCodeCheck "$url" "$expectedStatusCode"; then
    allPassed=false
fi

#url="https://expo.apo-ident.hiperscan.rsm-service.de"
#expectedStatusCode="402"
#if ! isHttpStatusCodeCheck "$url" "$expectedStatusCode"; then
#    allPassed=false
#fi


if $allPassed; then
    log "passed" "All checks passed."
else
    log "failed" "At least one check is not passed."
fi


